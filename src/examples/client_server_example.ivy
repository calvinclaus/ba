#lang ivy1.5

type client
type server

relation link(X:client, Y:server)
relation semaphore(X:server)

init semaphore(W) & ~link(X,Y)

action connect(x:client,y:server) = {
  assume semaphore(y);
  link(x,y) := true;
  semaphore(y) := false
}

action disconnect(x:client,y:server) = {
  assume link(x,y);
  link(x,y) := false;
  semaphore(y) := true
}

action test = {
  assert ~(X ~= Z & link(X,Y) & link(Z,Y))
}

export connect
export disconnect
export test

# concept c1(X,Y,Z) = (link(X,Z) * ~X = Y * link(Y,Z))

#conjecture (X = Z | ~link(X,Y) | ~link(Z,Y))
#conjecture link(X,Y) -> ~semaphore(Y)
